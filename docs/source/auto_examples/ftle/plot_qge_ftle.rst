
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/ftle/plot_qge_ftle.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_ftle_plot_qge_ftle.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ftle_plot_qge_ftle.py:


Quasi-geostrophic FTLE
======================

Compute the FTLE field for the QGE.

.. GENERATED FROM PYTHON SOURCE LINES 8-19

.. code-block:: Python


    # Author: ajarvis
    # Data: We thank Changhong Mou and Traian Iliescu for providing us with this dataset
    #       and allowing it to be used here.

    import numpy as np
    from math import copysign
    import matplotlib.pyplot as plt
    from numbacs.flows import get_interp_arrays_2D, get_flow_2D
    from numbacs.integration import flowmap_grid_2D
    from numbacs.diagnostics import ftle_grid_2D







.. GENERATED FROM PYTHON SOURCE LINES 20-24

Get flow data
--------------
Load velocity data, set up domain, set the integration span and direction, create
interpolant of velocity data and retrieve necessary arrays.

.. GENERATED FROM PYTHON SOURCE LINES 24-48

.. code-block:: Python


    # load in qge velocity data
    u = np.load("../data/qge/qge_u.npy")
    v = np.load("../data/qge/qge_v.npy")

    # set up domain
    nt, nx, ny = u.shape
    x = np.linspace(0, 1, nx)
    y = np.linspace(0, 2, ny)
    t = np.linspace(0, 1, nt)
    dx = x[1] - x[0]
    dy = y[1] - y[0]

    # set integration span and integration direction
    t0 = 0.0
    T = 0.1
    params = np.array([copysign(1, T)])  # important this is an array of type float

    # get interpolant arrays of velocity field
    grid_vel, C_eval_u, C_eval_v = get_interp_arrays_2D(t, x, y, u, v)

    # get flow to be integrated
    funcptr = get_flow_2D(grid_vel, C_eval_u, C_eval_v, extrap_mode="linear")








.. GENERATED FROM PYTHON SOURCE LINES 49-52

Integrate
---------
Integrate grid of particles and return final positions.

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    flowmap = flowmap_grid_2D(funcptr, t0, T, x, y, params)








.. GENERATED FROM PYTHON SOURCE LINES 55-58

FTLE
----
Compute FTLE field from final particle positions.

.. GENERATED FROM PYTHON SOURCE LINES 58-60

.. code-block:: Python

    ftle = ftle_grid_2D(flowmap, T, dx, dy)








.. GENERATED FROM PYTHON SOURCE LINES 61-64

Plot
----
Plot the results.

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: Python

    fig, ax = plt.subplots(dpi=200)
    ax.contourf(x, y, ftle.T, levels=100)
    ax.set_aspect("equal")
    plt.show()



.. image-sg:: /auto_examples/ftle/images/sphx_glr_plot_qge_ftle_001.png
   :alt: plot qge ftle
   :srcset: /auto_examples/ftle/images/sphx_glr_plot_qge_ftle_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.375 seconds)


.. _sphx_glr_download_auto_examples_ftle_plot_qge_ftle.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_qge_ftle.ipynb <plot_qge_ftle.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_qge_ftle.py <plot_qge_ftle.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_qge_ftle.zip <plot_qge_ftle.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
